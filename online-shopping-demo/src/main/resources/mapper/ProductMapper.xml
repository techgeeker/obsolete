<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.mliuframework.spring.demo.onlineshopping.dao.ProductMapper">

    <resultMap id="productBaseResultMap" type="Product">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="prod_name" property="name" jdbcType="VARCHAR"/>
        <result column="model" property="model" jdbcType="VARCHAR"/>
        <result column="prod_type" property="type" jdbcType="TINYINT"/>
        <result column="prod_image_url" property="imageUrl" jdbcType="VARCHAR"/>
        <result column="price" property="price" jdbcType="INTEGER"/>
        <result column="balance" property="balance" jdbcType="INTEGER"/>
        <result column="sales_volume" property="salesVolume" jdbcType="INTEGER"/>
        <result column="comment_count" property="commentCount" jdbcType="INTEGER"/>
        <result column="collect_count" property="collectCount" jdbcType="INTEGER"/>
        <result column="popularity" property="popularity" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="product_Base_Column_List">
        id, prod_name, model, prod_type, prod_image_url, price, balance,
        sales_volume, comment_count, collect_count, popularity, create_time,
        update_time
    </sql>

    <select id="selectByPrimaryKey" resultMap="productBaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="product_Base_Column_List"/>
        from tb_product
        where id = #{id, jdbcType=BIGINT}
    </select>

    <select id="selectByProperties" resultMap="productBaseResultMap" parameterType="Product">
        select
        <include refid="product_Base_Column_List"/>
        from tb_product
        <where>
            <if test="name != null and name != ''">
                `prod_name` = #{name, jdbcType=VARCHAR}
            </if>
            <if test="model != null and model != ''">
                AND `model` = #{model, jdbcType=VARCHAR}
            </if>
            <if test="type != null">
                AND `prod_type` = #{type, jdbcType=TINYINT}
            </if>
        </where>
    </select>

    <select id="selectAll" resultMap="productBaseResultMap">
        select
        <include refid="product_Base_Column_List"/>
        from tb_product
    </select>

    <insert id="insert" parameterType="Product" useGeneratedKeys="true" keyProperty="id">
        <![CDATA[
        insert into tb_product (id, prod_name, model, prod_type, prod_image_url,
        price, balance, sales_volume, comment_count, collect_count, popularity,
        create_time, update_time)
        values (#{id, jdbcType=BIGINT}, #{name, jdbcType=VARCHAR},
                #{model, jdbcType=VARCHAR}, #{type, jdbcType=TINYINT},
                #{imageUrl, jdbcType=VARCHAR}, #{price, jdbcType=INTEGER},
                #{balance, jdbcType=INTEGER}, #{salesVolume, jdbcType=INTEGER},
                #{commentCount, jdbcType=INTEGER}, #{collectCount, jdbcType=INTEGER},
                #{popularity, jdbcType=INTEGER}, #{createTime, jdbcType=TIMESTAMP},
                #{updateTime, jdbcType=TIMESTAMP})
        ]]>
    </insert>

    <insert id="insertSelective" parameterType="Product" useGeneratedKeys="true" keyProperty="id">
        insert into tb_product
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                prod_name,
            </if>
            <if test="model != null">
                model,
            </if>
            <if test="type != null">
                prod_type,
            </if>
            <if test="imageUrl != null">
                prod_image_url,
            </if>
            <if test="price != null">
                price,
            </if>
            <if test="balance != null">
                balance,
            </if>
            <if test="salesVolume != null">
                sales_volume,
            </if>
            <if test="commentCount != null">
                comment_count,
            </if>
            <if test="collectCount != null">
                collect_count,
            </if>
            <if test="popularity != null">
                popularity,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id, jdbcType=BIGINT},
            </if>
            <if test="name != null">
                #{name, jdbcType=VARCHAR},
            </if>
            <if test="model != null">
                #{model, jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type, jdbcType=TINYINT},
            </if>
            <if test="imageUrl != null">
                #{imageUrl, jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                #{price, jdbcType=INTEGER},
            </if>
            <if test="balance != null">
                #{balance, jdbcType=INTEGER},
            </if>
            <if test="salesVolume != null">
                #{salesVolume, jdbcType=INTEGER},
            </if>
            <if test="commentCount != null">
                #{commentCount, jdbcType=INTEGER},
            </if>
            <if test="collectCount != null">
                #{collectCount, jdbcType=INTEGER},
            </if>
            <if test="popularity != null">
                #{popularity, jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime, jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime, jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="Product">
        update tb_product
        <set>
            <if test="name != null">
                prod_name = #{name, jdbcType=VARCHAR},
            </if>
            <if test="model != null">
                model = #{model, jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                prod_type = #{type, jdbcType=TINYINT},
            </if>
            <if test="imageUrl != null">
                prod_image_url = #{imageUrl, jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                price = #{price, jdbcType=INTEGER},
            </if>
            <if test="balance != null">
                balance = #{balance, jdbcType=INTEGER},
            </if>
            <if test="salesVolume != null">
                sales_volume = #{salesVolume, jdbcType=INTEGER},
            </if>
            <if test="commentCount != null">
                comment_count = #{commentCount, jdbcType=INTEGER},
            </if>
            <if test="collectCount != null">
                collect_count = #{collectCount, jdbcType=INTEGER},
            </if>
            <if test="popularity != null">
                popularity = #{popularity, jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime, jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime, jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id, jdbcType=BIGINT}
    </update>

    <update id="updateByDecreaseBalance" parameterType="ProductFieldUpdateParam">
        update tb_product
        set balance = balance - #{balanceChange, jdbcType=INTEGER},
            sales_volume = sales_volume + #{balanceChange, jdbcType=INTEGER}
        where id = #{id, jdbcType=BIGINT} and balance > 0
    </update>

</mapper>